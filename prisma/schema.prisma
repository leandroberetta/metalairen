generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Carta {
  id          Int         @id @default(autoincrement())
  nombre      String
  tipo        String
  subtipo1    String?
  subtipo2    String?
  subtipo3    String?
  subtipo4    String?
  supertipo   String?
  rareza      String
  coste       Int
  expansion   String
  imagen      String
  text        String      @db.VarChar(1000)
  costeBoveda Int?
  prohibida   Boolean     @default(false)
  createdAt   DateTime?   @default(now())
  updatedAt   DateTime?   @default(now())
  idLairen    Int         @unique
  mazoCartas  MazoCarta[]

  @@map("cartas")
}

model Mazo {
  id        Int          @id @default(autoincrement())
  nombre    String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @default(now())
  subtipo1  String?
  subtipo2  String?
  usuarioId Int
  publico   Boolean      @default(false)
  formato   String?
  usuario   Usuario      @relation(fields: [usuarioId], references: [id])
  cartas    MazoCarta[]
  torneos   TorneoMazo[]
  torneo    Boolean      @default(false)

  @@map("mazos")
}

model MazoCarta {
  id        Int      @id @default(autoincrement())
  mazoId    Int
  cartaId   Int
  seccion   String
  cantidad  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  carta     Carta    @relation(fields: [cartaId], references: [id])
  mazo      Mazo     @relation(fields: [mazoId], references: [id])

  @@map("mazos_cartas")
}

model Torneo {
  id        Int          @id @default(autoincrement())
  nombre    String
  fecha     DateTime
  createdAt DateTime     @default(now())
  updatedAt DateTime     @default(now())
  provincia String
  sede      String
  informe   String?      @default("")
  mazos     TorneoMazo[]

  @@map("torneos")
}

model TorneoMazo {
  id           Int      @id @default(autoincrement())
  torneoId     Int
  mazoId       Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
  participante String
  puesto       String
  videos       String   @default("")
  orden        Int?
  mazo         Mazo     @relation(fields: [mazoId], references: [id])
  torneo       Torneo   @relation(fields: [torneoId], references: [id])

  @@map("torneos_mazos")
}

model Usuario {
  id        Int      @id @default(autoincrement())
  nombre    String
  email     String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  mazos     Mazo[]

  @@map("usuarios")
}
